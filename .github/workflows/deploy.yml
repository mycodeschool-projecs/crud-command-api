name: CD ‚Äì Deploy CRUD-COMMAND (API)

on:
  push:
    branches:
      - master
      - chore/**
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Run tests
        run: ./mvnw -B test

  build-api:
    needs: unit-tests
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/master' && 'prod' || 'dev' }}
      USERNAME: mycodeschool
      REPO: crud-command-api
    outputs:
      tag: ${{steps.generate-tag.outputs.tag}}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate Tag
        id: generate-tag
        run: |
          TAG="${DATE}-${ENVIRONMENT}"
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Build & push multi-arch image

        run: |
          export TAG="${{steps.generate-tag.outputs.tag}}
          echo "üåÄ  Will push image as: ${USERNAME}/${REPO}:${TAG}"
          chmod +x ci/build-publish.sh
          # Build context ‚Äû.‚Äù + ARG pentru Spring
          ./ci/build-publish.sh . --build-arg SPRING_PROFILES_ACTIVE=docker          
          
          
          
          
          


  update-docker-compose:
    runs-on: ubuntu-latest
    needs: build-api
    env:
      TAG: ${{needs.build-api.outputs.tag}}
    steps:
      - name: Checkout other repository
        uses: actions/checkout@v2
        with:
          repository: 'mycodeschool-projecs/crud-docker-files'
          token: ${{ secrets.DEPLOY_ACCESS_TOKEN }}
          path: 'crud-docker-files'

      - name: Update and commit app version in docker-compose.yml in other repository
        run: |
          cd crud-docker-files/
          echo -e "Current ./docker-compose.yaml\n$(cat docker-compose.yaml)"
          sed -i -E 's_(mycodeschool/crud-command-api:)([^"]*)_\1'${{env.TAG}}'_' docker-compose.yaml
          echo -e "Updated ./docker-compose.yaml\n$(cat docker-compose.yaml)"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "new app version: ${{env.TAG}}"
          git push origin HEAD:master