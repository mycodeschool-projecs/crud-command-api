name: CD – Deploy CRUD-COMMAND (API)

on:
  push:
    branches:
      - master
      - chore/**
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  USERNAME: mycodeschool
  REPO: crud-command-api

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '19'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run tests
        run: ./mvnw -B test

  build-api:
    needs: unit-tests
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.generate-tag.outputs.tag }}
      environment: ${{ steps.generate-tag.outputs.environment }}
    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/master' && 'prod' || 'dev' }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate Tag
        id: generate-tag
        run: |
          DATE="$(date '+%d.%m.%Y.%H.%M.%S')"
          TAG="${DATE}-${ENVIRONMENT}"
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "environment=${ENVIRONMENT}" >> $GITHUB_OUTPUT
          echo "📦 Generated tag: ${TAG}"

      - name: Build & push multi-arch image
        run: |
          export TAG="${{ steps.generate-tag.outputs.tag }}"
          echo "🐳 Building and pushing image: ${USERNAME}/${REPO}:${TAG}"
          chmod +x ci/build-publish.sh
          ./ci/build-publish.sh . --build-arg SPRING_PROFILES_ACTIVE=docker


  update-docker-compose:
    needs: build-api
    runs-on: ubuntu-latest
#    steps:
#      - run: echo "Deploying version ${{ needs.build-api.outputs.tag }}"
    env:
      TAG: ${{ needs.build-api.outputs.tag }}
      ENVIRONMENT: ${{ needs.build-api.outputs.environment }}
    steps:
      - name: Checkout docker-files repository
        uses: actions/checkout@v4
        with:
          repository: 'mycodeschool-projecs/crud-docker-files'  # Fixed typo
          token: ${{ secrets.DEPLOY_ACCESS_TOKEN }}
          path: 'crud-docker-files'

      - name: Update docker-compose.yml
        run: |
          cd crud-docker-files/

          echo "📋 Current docker-compose.yaml:"
          cat docker-compose.yaml

          # Update the image tag
          sed -i -E "s|(mycodeschool/crud-command-api:)[^[:space:]\"']+|\1${{ needs.build-api.outputs.tag }}|g" docker-compose.yaml

          echo -e "\n✅ Updated docker-compose.yaml:"
          cat docker-compose.yaml

      - name: Commit and push changes
        run: |
          cd crud-docker-files/

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add docker-compose.yaml

          if git diff --staged --quiet; then
            echo "📝 No changes to commit"
          else
            git commit -m "chore: update crud-command-api to ${{ needs.build-api.outputs.tag }}"
            git push origin HEAD:master
            echo "✅ Pushed new version: ${{ needs.build-api.outputs.tag }}"
          fi

  notify-docker-success:
    needs: [build-api, update-docker-compose]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Summary
        run: |
          echo "## 🎉 Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: mycodeschool/crud-command-api:${{ needs.build-api.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ needs.build-api.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
  

  update-k8s-files:
    needs: build-api
    runs-on: ubuntu-latest
    env:
      TAG: ${{ needs.build-api.outputs.tag }}
      ENVIRONMENT: ${{ needs.build-api.outputs.environment }}
    steps:
      - name: Checkout k8s-files repository
        uses: actions/checkout@v2
        with:
          repository: 'mycodeschool-projecs/crud-k8s-files'
          token: ${{ secrets.DEPLOY_ACCESS_TOKEN }}
          path: 'crud-k8s-files'

      - name: Update and commit app version in deployment-kube-land.yml in other repository
        run: |
          cd crud-k8s-files/k8s-files-raw/
          echo -e "Current ./command-service.yaml\n$(cat command-service.yaml)"
          sed -i -E 's_(mycodeschool/crud-command-api:)([^"]*)_\1'${{ env.TAG }}'_' command-service.yaml
          echo -e "Updated ./command-service.yaml\n$(cat command-service.yaml)"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "new app version: ${{ env.TAG }}"
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          
          if [ "$CURRENT_BRANCH" = "master" ]; then
              echo "Pushing to master branch"
              git push origin HEAD:master
          else
              echo "Pushing to feature branch: $CURRENT_BRANCH"
              git push origin HEAD:$CURRENT_BRANCH
          fi