
spring:
  application:
    name: kube-ms1
  datasource:
    url: jdbc:mysql://localhost:3307/kube_db?useUnicode=true&characterEncoding=utf8&useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
      hibernate.format_sql: true
    show-sql: true

cors:
  allowed-origin: ${ADDITIONAL_CORS_ORIGIN:http://localhost:3000,http://localhost:8081,http://react-app.local,http://react-app:3000,http://react-app.local:3000,http://icode.mywire.org,http://icode.mywire.org:3000}

token:
  signing:
    key: "3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b"

param:
  land-name: kube-land
  land-service: localhost
  microserv1-name: kube-ms1
  microserv1-service: localhost
  api-service: localhost

springdoc:
  api-docs:
    enabled: true  # Enable OpenAPI JSON
  swagger-ui:
    enabled: true  # Enable Swagger UI
    path: /docs  # Path where Swagger can be accessed
    operations-sorter: method  # Sort endpoints by HTTP method
    disable-swagger-default-url: true
    display-request-duration: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

server:
  error:
    include-binding-errors: always
    include-message: always
  port: 8081

management:
  tracing:
    sampling:
      probability: 1.0  # Temporar seteazÄƒ la 100% pentru testare
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true

metrics:
  distribution:
    percentiles-histogram:
      http:
        server:
          requests: true

#logging:
#  pattern:
#    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
#  level:
#    com.zaxxer.hikari: WARN
#    org.hibernate.orm.deprecation: ERROR
#    org.hibernate.orm.connections.pooling: WARN
#    root: INFO
#    org.springframework.amqp: info
#  file:
#    name: crud-logs.log
#  logstash:
#    enabled: false
#    destination: localhost:3100
#    level: OFF  # Set to ALL to enable, OFF to disable

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  level:
    root: debug
    org.springframework.amqp: info
  file:
    name: crud-logs.log
  logstash:
    enabled: false
    destination: localhost:3100
    level: OFF  # Set to ALL to enable, OFF to disable

# RabbitMQ event publishing configuration
rabbitmq:
  exchange:
    name: crud-events-exchange
  routing:
    key:
      prefix: crud.events
